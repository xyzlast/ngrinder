import static net.grinder.script.Grinder.grinder
import static org.junit.Assert.*
import static org.hamcrest.Matchers.*
import net.grinder.plugin.http.HTTPRequest
import net.grinder.script.GTest
import net.grinder.script.Grinder
import net.grinder.scriptengine.groovy.junit.GrinderRunner
import net.grinder.scriptengine.groovy.junit.annotation.BeforeThread
import net.grinder.scriptengine.groovy.junit.annotation.BeforeProcess

import org.junit.BeforeClass
import org.junit.Test
import org.junit.runner.RunWith

import HTTPClient.HTTPResponse
import org.json.JSONException;
import org.json.JSONObject;
import HTTPClient.NVPair

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

/**
 * A simple example using the HTTP plugin that shows the retrieval of a
 * single page via HTTP.
 *
 * This script is auto generated by ngrinder.
 *
 * @author ${userName}
 */
@RunWith(GrinderRunner)
class Test1 {

    public static GTest test;
    public static HTTPRequest request;

    // This method is executed once per a process.
    @BeforeProcess
    public static void beforeClass() {
        java.lang.System.setProperty("https.protocols", "TLSv1,TLSv1.1,TLSv1.2");
        test = new GTest(1, 'SaveAssetsTest');
        request = new HTTPRequest();
        test.record(request);
        grinder.logger.info("before process.");
    }

    // This method is executed once per a thread.
    @BeforeThread
    public void beforeThread() {
        java.lang.System.setProperty("https.protocols", "TLSv1,TLSv1.1,TLSv1.2");
        grinder.statistics.delayReports=true;
        grinder.logger.info("before thread.");
    }


    private NVPair[] headers() {
        return [
                new NVPair("Content-type", "application/json;charset=UTF-8")
        ];
    }

    // This method is continuously executed until you stop the test
    @Test
    public void test(){
        def body = '{"user":{"name":"testName","birth":"19781108","gender":"1","mdn":"01011112222","nationality":"N","ci":"5cb1b4cf-6518-4c4c-bc90-2b03594973c1"},"userService":{"membershipId":"9cf4271b-db67-491a-a10a-d818e1e21897","data01":"ca275f6d-9e97-4962-940c-ac1b0b256983"},"termsList":[{"M1":"Y"},{"M2":"Y"}]}';
        HTTPResponse result = request.POST("http://192.168.100.15:4000/v3/b2b/skp/assets/saving", body.getBytes(), headers());
        if (result.statusCode == 301 || result.statusCode == 302) {
            grinder.logger.warn("Warning. The response may not be correct. The response code was {}.", result.statusCode);
        } else {
            assertThat(result.statusCode, is(200));
        }
    }
}
